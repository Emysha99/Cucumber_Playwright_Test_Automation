name: Cucumber Test Automation

on:
  push:
    branches: [ "01.01.2025" ]
  pull_request:
    branches: [ "01.01.2025" ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Navigate to API-Testing Directory
        run: cd API-Testing

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: |
          cd API-Testing
          mvn clean compile -DskipTests
        continue-on-error: true

      - name: Start Application
        run: |
          cd API-Testing/libs
          java -Dserver.port=7081 -jar demo-0.0.1-SNAPSHOT.jar &
          echo "Waiting for application to start..."
          
          USERNAME="admin"
          PASSWORD="password"
          AUTH=$(echo -n "$USERNAME:$PASSWORD" | base64)
          
          timeout 60 bash -c "while [[ \"\$(curl -s -o /dev/null -w '%{http_code}' -H \"Authorization: Basic $AUTH\" 127.0.0.1:7081/api/books)\" != \"200\" ]]; do sleep 5; done" || true
          
          echo "Application is running!"
          cd ..
        continue-on-error: true

      - name: Create Allure Directories
        if: always()
        run: |
          cd API-Testing
          mkdir -p target/allure-results
          mkdir -p allure-report
          chmod -R 777 target
        continue-on-error: true

      - name: Run Tests
        id: tests
        run: |
          cd API-Testing
          mvn test
        continue-on-error: true

      - name: Debug Test Results
        if: always()
        run: |
          cd API-Testing
          echo "Test Results Directory Content:"
          ls -la target/ || true
          echo "Allure Results Content:"
          ls -la target/allure-results/ || true
        continue-on-error: true

      - name: Generate Allure Report with Maven
        if: always()
        run: |
          cd API-Testing
          echo "Generating Allure report with Maven..."
          mvn allure:report
          
          # Debug information
          echo "Maven target directory contents:"
          ls -la target/
          
          # Create GitHub Pages directory
          mkdir -p target/github-pages
          
          # Try both possible locations for Allure report
          if [ -d "target/site/allure-maven-plugin" ]; then
            echo "Maven Allure report generated successfully"
            cp -r target/site/allure-maven-plugin/* target/github-pages/
          else
            echo "Maven Allure report generation failed, falling back to CLI"
            # Install Allure CLI
            curl -o allure-2.24.0.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.tgz
            tar -zxvf allure-2.24.0.tgz -C /tmp
            sudo ln -s /tmp/allure-2.24.0/bin/allure /usr/local/bin/allure
          
            # Generate report using Allure CLI
            allure generate target/allure-results -o target/github-pages --clean
          fi
          
          # Debug information
          echo "GitHub Pages directory contents:"
          ls -la target/github-pages/
          
          # Create .nojekyll file
          touch target/github-pages/.nojekyll
          
          # Ensure we have something to deploy
          if [ ! -f target/github-pages/index.html ]; then
            echo "<html><body><h1>Test Results</h1><pre>" > target/github-pages/index.html
            echo "Test execution status: ${{ steps.tests.outcome }}" >> target/github-pages/index.html
            echo "</pre></body></html>" >> target/github-pages/index.html
          fi
        continue-on-error: true

      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v3
        continue-on-error: true

      - name: Upload Pages artifact
        if: always()
        uses: actions/upload-pages-artifact@v2
        with:
          path: 'API-Testing/target/github-pages'
        continue-on-error: true

      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Store Allure Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: |
            API-Testing/target/site/allure-maven-plugin/
            API-Testing/target/allure-results/
          retention-days: 30
        continue-on-error: true

      - name: Print Test Status
        if: always()
        run: |
          echo "Test execution completed with status: ${{ steps.tests.outcome }}"
          echo "Allure report should be available at: ${{ steps.deployment.outputs.page_url }}"
        continue-on-error: true
