name: Playwright Tests with Allure Report

on:
  push:
    branches: [ "204165T-2" ]
  pull_request:
    branches: [ "204165T-2" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  ui-testing:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: UI-Testing

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'UI-Testing/yarn.lock'

      - name: Create Allure Results Directory
        run: |
          mkdir -p allure-results
          chmod -R 777 allure-results

      - name: Install dependencies
        run: |
          yarn install
          yarn add -D @playwright/test allure-playwright

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install xvfb
        run: sudo apt-get install -y xvfb

      - name: Run Playwright tests
        run: xvfb-run --auto-servernum yarn test
        continue-on-error: true
        env:
          CI: true

      - name: Install Allure commandline
        if: always()
        run: |
          curl -o allure-2.24.0.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.tgz
          tar -zxvf allure-2.24.0.tgz -C /tmp
          sudo ln -s /tmp/allure-2.24.0/bin/allure /usr/local/bin/allure

      - name: Generate Allure Report
        if: always()
        run: |
          ls -la allure-results/
          allure generate allure-results -o allure-report --clean
          touch allure-report/.nojekyll

      - name: Debug Report Directory
        if: always()
        run: |
          echo "Checking report directory structure:"
          ls -R allure-report/

      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: UI-Testing/allure-report
          retention-days: 30

  deploy-report:
    needs: ui-testing
    runs-on: ubuntu-latest
    if: always()
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download Allure Report
        uses: actions/download-artifact@v3
        with:
          name: allure-report
          path: allure-report

      - name: Debug Downloaded Report
        run: |
          echo "Checking downloaded report structure:"
          ls -R allure-report/

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: allure-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        if: always()

      - name: Print Report URL
        if: always()
        run: |
          echo "Test execution completed"
          echo "Allure report available at: ${{ steps.deployment.outputs.page_url }}"
