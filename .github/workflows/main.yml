name: Combined UI and API Testing

on:
  push:
    branches: [ "204165T-2" ]
  pull_request:
    branches: [ "204165T-2" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  ui-testing:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: UI-Testing

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'yarn'
          cache-dependency-path: 'UI-Testing/yarn.lock'

      - name: Install dependencies
        run: yarn install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Install xvfb
        run: sudo apt-get install -y xvfb

      - name: Run Playwright tests
        run: xvfb-run --auto-servernum yarn test
        continue-on-error: true
        env:
          CI: true

      - name: Generate Allure Report
        if: always()
        run: yarn allure:generate
        continue-on-error: true

      - name: Upload UI Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ui-test-results
          path: UI-Testing/allure-report
          retention-days: 30

  api-testing:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 20
        uses: actions/setup-java@v3
        with:
          java-version: '20'
          distribution: 'temurin'
          cache: maven

      - name: Run API Tests
        working-directory: API_Testing
        run: mvn test
        continue-on-error: true

      - name: Generate API Test Report
        if: always()
        working-directory: API_Testing
        run: mvn allure:report
        continue-on-error: true

      - name: Upload API Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: API_Testing/target/site/allure-maven-plugin
          retention-days: 30

  publish-report:
    needs: [ui-testing, api-testing]
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Download UI Results
        uses: actions/download-artifact@v3
        with:
          name: ui-test-results
          path: combined-report/ui

      - name: Download API Results
        uses: actions/download-artifact@v3
        with:
          name: api-test-results
          path: combined-report/api

      - name: Create Index Page
        run: |
          mkdir -p combined-report
          cat > combined-report/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
            <head>
              <title>Test Reports</title>
              <style>
                body { font-family: Arial; margin: 20px; }
                .report-link { display: block; margin: 10px 0; }
              </style>
            </head>
            <body>
              <h1>Test Reports</h1>
              <a class="report-link" href="ui/">UI Test Report</a>
              <a class="report-link" href="api/">API Test Report</a>
            </body>
          </html>
          EOF

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: combined-report

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

      - name: Print Report URL
        run: echo "Test reports available at ${{ steps.deployment.outputs.page_url }}"
